{"version":3,"sources":["styles/globalStyles.tsx","styles/mediaQuery.ts","styles/colors.ts","components/ProductList/ProductItem.tsx","components/ProductList/hooks.ts","components/ProductList/index.tsx","store/product.ts","apis/index.ts","store/ui.ts","store/index.tsx","pages/Products.tsx","pages/WishProducts.tsx","components/Header/constants.ts","components/Header/Navigation.tsx","components/Header/SortOption.tsx","components/Header/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["customReset","css","GlobalStyles","styles","emotionReset","BreakPoints","memo","props","title","wish","toggleWish","removeWish","thumbnail","price","useState","imageLoaded","setImageLoaded","Item","Thumbnail","src","onLoad","Contents","toLocaleString","ActionButton","onClick","Placeholder","prev","next","styled","li","img","div","colors","button","useScrollFetch","productPageUp","useEffect","document","handleScroll","throttle","documentElement","scrollHeight","scrollTop","clientHeight","addEventListener","useMemoryScroll","window","scrollTo","useHandler","handler","useCallback","id","List","products","wishs","handleToggleWish","handleRemoveWish","Wrapper","CardList","map","item","key","style","SortOption","ol","desktop","baseURL","location","hostname","includes","api","axios","create","fetchProducts","a","get","Page","ProductStore","this","originProducts","sortOption","Default","fetch","data","console","error","filter","product","sort","b","PriceASC","observable","computed","action","cloneWishs","UiStore","page","Products","Wishs","scroll","rootStore","ui","MobxProvider","children","useStore","useContext","MobXProviderContext","observer","_observer","allProducts","productPage","productScroll","useMemo","slice","wishProducts","wishProductPage","wishProductPageUp","wishProductScroll","length","EmptyList","h2","navigations","name","displayName","link","Navigation","useLocation","pathname","selectedTab","setSelectedTab","setScroll","handleClickTab","scrollingElement","Nav","NavItem","selected","to","nav","p","clearScroll","PriceDESC","Header","App","Fragment","path","WishProducts","isLocalhost","Boolean","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","log","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","getElementById","URL","process","href","origin","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d78d6aea.chunk.js","sourcesContent":["/** @jsx jsx */\nimport { jsx, Global, css } from '@emotion/core';\nimport emotionReset from 'emotion-reset';\n\nconst customReset = css`\n  html,\n  body,\n  body > div {\n    height: 100%;\n  }\n  a {\n    text-decoration: none;\n    color: unset;\n  }\n  button {\n    background: none;\n    border: none;\n    outline: none;\n  }\n  * {\n    box-sizing: border-box;\n  }\n`;\n\nexport default function GlobalStyles(): JSX.Element {\n  return <Global styles={[emotionReset, customReset]} />;\n}\n","import { css, SerializedStyles } from '@emotion/core';\n\nexport const BreakPoints = {\n  Tablet: 768,\n  Desktop: 1024,\n};\n\nexport const mobile = (style: SerializedStyles): SerializedStyles => css`\n  @media (min-width: ${BreakPoints.Tablet}px) {\n    ${style};\n  }\n`;\n\nexport const desktop = (style: SerializedStyles): SerializedStyles => css`\n  @media (min-width: ${BreakPoints.Desktop}px) {\n    ${style};\n  }\n`;\n","export default {\n  sky: '#2b96ed',\n  white: 'white',\n  whiteA70: 'rgba(255, 255, 255, 0.7)',\n  black: 'black',\n  blackA20: 'rgba(0, 0, 0, 0.2)',\n  blackA70: 'rgba(0, 0, 0, 0.7)',\n};\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core';\nimport styled from '@emotion/styled';\nimport { useState, memo } from 'react';\nimport { colors } from '../../styles';\n\ninterface ProductItemProps {\n  title: string;\n  wish: boolean | null;\n  toggleWish: () => void;\n  removeWish: () => void;\n  thumbnail: string;\n  price: number;\n}\n\nexport default memo(\n  function ProductItem(props: ProductItemProps): JSX.Element {\n    const { title, wish, toggleWish, removeWish, thumbnail, price } = props;\n    const [imageLoaded, setImageLoaded] = useState(false);\n\n    return (\n      <Item>\n        <Thumbnail src={thumbnail} onLoad={() => setImageLoaded(true)} />\n        <Contents>\n          <h3>{title}</h3>\n          <p>{price.toLocaleString()}원</p>\n        </Contents>\n        {wish !== null && (\n          <ActionButton onClick={toggleWish}>{wish ? '💙' : '🤍'}</ActionButton>\n        )}\n        {wish === null && <ActionButton onClick={removeWish}>❌</ActionButton>}\n        {!imageLoaded && (\n          <Placeholder src=\"https://d2ur7st6jjikze.cloudfront.net/share/image_loader.gif\" />\n        )}\n      </Item>\n    );\n  },\n  (prev, next) => {\n    return prev.wish === next.wish;\n  },\n);\n\nconst Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  height: 300px;\n`;\nconst Thumbnail = styled.img`\n  width: 100%;\n  height: 200px;\n  object-fit: cover;\n  border-top-left-radius: 4px;\n  border-top-right-radius: 4px;\n`;\nconst Contents = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 98px;\n  padding: 16px;\n  border-bottom-left-radius: 4px;\n  border-bottom-right-radius: 4px;\n  border: 1px solid ${colors.blackA20};\n  border-top: 0 solid red;\n\n  h3 {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    -webkit-box-orient: vertical;\n    display: -webkit-box;\n    -webkit-line-clamp: 2;\n    line-height: 22px;\n  }\n\n  p {\n    font-size: 14px;\n    color: ${colors.blackA70};\n  }\n`;\nconst ActionButton = styled.button`\n  position: absolute;\n  top: 16px;\n  right: 16px;\n  font-size: 24px;\n  color: white;\n  cursor: pointer;\n`;\n\nconst Placeholder = styled.img`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  border-radius: 4px;\n  object-fit: cover;\n  transform: scale(1.1);\n`;\n","import { useEffect } from 'react';\nimport { throttle } from 'throttle-debounce';\n\nexport const useScrollFetch = (productPageUp: () => void) => {\n  useEffect(() => {\n    if (document) {\n      const handleScroll = throttle(300, () => {\n        const {\n          scrollHeight,\n          scrollTop,\n          clientHeight,\n        } = document.documentElement;\n        if (scrollHeight - scrollTop === clientHeight) {\n          productPageUp();\n        }\n      });\n      document.addEventListener('scroll', handleScroll);\n    }\n  }, [productPageUp]);\n};\n\nexport const useMemoryScroll = (scrollTop: number) => {\n  useEffect(() => {\n    window.scrollTo(0, scrollTop);\n  }, [scrollTop]);\n};\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\nimport styled from '@emotion/styled';\nimport { useCallback } from 'react';\nimport ProductItem from './ProductItem';\nimport { mobile, desktop } from '../../styles';\nimport { Product } from '../../types';\n\nexport { useScrollFetch, useMemoryScroll } from './hooks';\n\ninterface ListProps {\n  products: Product[];\n  wishs?: Record<string, boolean | null>;\n  toggleWish?: (id: number) => void;\n  removeWish?: (id: number) => void;\n}\n\nconst useHandler = (handler?: (id: number) => void) => {\n  return useCallback(\n    (id: number) => {\n      handler && handler(id);\n    },\n    [handler],\n  );\n};\n\nexport default function List(props: ListProps) {\n  const { products, wishs, toggleWish, removeWish } = props;\n  const handleToggleWish = useHandler(toggleWish);\n  const handleRemoveWish = useHandler(removeWish);\n\n  return (\n    <Wrapper>\n      <CardList>\n        {products.map((item) => (\n          <ProductItem\n            key={item.id}\n            title={item.title}\n            wish={wishs ? item.id in wishs : null}\n            toggleWish={() => handleToggleWish(item.id)}\n            removeWish={() => handleRemoveWish(item.id)}\n            thumbnail={item.thumbnail}\n            price={item.price}\n          />\n        ))}\n      </CardList>\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div`\n  padding: 16px;\n`;\n\nconst CardList = styled.ol`\n  display: grid;\n  grid-gap: 16px;\n  grid-template-columns: repeat(2, 1fr);\n\n  ${mobile(css`\n    grid-template-columns: repeat(3, 1fr);\n  `)}\n\n  ${desktop(css`\n    grid-template-columns: repeat(4, 1fr);\n  `)}\n`;\n","import { observable, computed, action } from 'mobx';\nimport { fetchProducts } from '../apis';\nimport { Product } from '../types';\n\nexport enum SortOption {\n  Default = 'Default',\n  PriceASC = 'PriceASC',\n  PriceDESC = 'PriceDESC',\n}\n\nexport interface ProductStoreInterface {\n  originProducts: Product[];\n  products: Product[];\n  wishs: Record<string, boolean | null>;\n  toggleWish: (id: number) => void;\n  removeWish: (id: number) => void;\n  sortOption: SortOption;\n  wishProducts: Product[];\n}\n\nclass ProductStore implements ProductStoreInterface {\n  @observable originProducts: Product[];\n  @observable wishs: Record<string, boolean | null>;\n  @observable sortOption: SortOption;\n\n  constructor() {\n    this.originProducts = [];\n    this.wishs = {};\n    this.sortOption = SortOption.Default;\n    this.fetch();\n  }\n\n  async fetch() {\n    try {\n      const { data } = await fetchProducts();\n      this.originProducts = data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  @computed\n  get wishProducts() {\n    return this.products.filter((product) => product.id in this.wishs);\n  }\n\n  @action\n  toggleWish = (id: number) => {\n    if (id in this.wishs) {\n      const cloneWishs = { ...this.wishs };\n      delete cloneWishs[id];\n      this.wishs = cloneWishs;\n    } else {\n      this.wishs = {\n        ...this.wishs,\n        [id]: true,\n      };\n    }\n  };\n\n  @action\n  removeWish = (id: number) => {\n    const cloneWishs = { ...this.wishs };\n    delete cloneWishs[id];\n    this.wishs = cloneWishs;\n  };\n\n  @computed\n  get products() {\n    const sortFunction = (a: Product, b: Product) =>\n      this.sortOption === SortOption.PriceASC\n        ? a.price - b.price\n        : b.price - a.price;\n    if (this.sortOption === SortOption.Default) {\n      return this.originProducts;\n    } else {\n      return [...this.originProducts].sort(sortFunction);\n    }\n  }\n}\n\nexport default ProductStore;\n","import axios, { AxiosInstance, AxiosResponse } from 'axios';\nimport { Product } from '../types';\n\nconst baseURL = window.location.hostname.includes('github.io')\n  ? '/ReactList'\n  : '/';\n\nconst api: AxiosInstance = axios.create({\n  baseURL,\n});\n\nexport const fetchProducts = async (): Promise<AxiosResponse<Product[]>> => {\n  return await api.get('/products.json');\n};\n","import { observable, computed, action } from 'mobx';\nimport { PagePaths } from '../types';\n\nexport enum Page {\n  Products = '/products',\n  Wishs = '/wish-products',\n}\n\nexport interface UiStoreInterface {\n  page: Record<string, number>;\n  scroll: Record<string, number>;\n  productPage: number;\n  wishProductPage: number;\n  productPageUp: () => void;\n  wishProductPageUp: () => void;\n  productScroll: number;\n  wishProductScroll: number;\n  setScroll: (page: PagePaths, scroll: number) => void;\n  clearScroll: () => void;\n}\n\nexport default class UiStore implements UiStoreInterface {\n  @observable page: Record<string, number>;\n  @observable scroll: Record<string, number>;\n\n  constructor() {\n    this.page = {\n      [Page.Products]: 1,\n      [Page.Wishs]: 1,\n    };\n    this.scroll = {\n      [Page.Products]: 0,\n      [Page.Wishs]: 0,\n    };\n  }\n\n  @computed\n  get productPage() {\n    return this.page[Page.Products];\n  }\n\n  @action\n  productPageUp = () => {\n    this.page[Page.Products] = this.page[Page.Products] + 1;\n  };\n\n  @computed\n  get productScroll() {\n    return this.scroll[Page.Products];\n  }\n\n  @action\n  setScroll = (page: PagePaths, scroll: number) => {\n    this.scroll[page] = scroll;\n  };\n\n  @computed\n  get wishProductPage() {\n    return this.page[Page.Wishs];\n  }\n\n  @action\n  wishProductPageUp = () => {\n    this.page[Page.Wishs] = this.page[Page.Wishs] + 1;\n  };\n\n  @computed\n  get wishProductScroll() {\n    return this.scroll[Page.Wishs];\n  }\n\n  @action\n  clearScroll = () => {\n    this.scroll = {\n      [Page.Products]: 0,\n      [Page.Wishs]: 0,\n    };\n  };\n}\n","import React, { ReactNode, useContext } from 'react';\nimport {\n  Provider,\n  MobXProviderContext,\n  observer as _observer,\n} from 'mobx-react';\nimport ProductStore, { ProductStoreInterface } from './product';\nimport UiStore, { UiStoreInterface } from './ui';\n\nexport interface Stores {\n  product: ProductStoreInterface;\n  ui: UiStoreInterface;\n}\n\nexport const product = new ProductStore();\nexport const ui = new UiStore();\n\nconst rootStore: Stores = {\n  product,\n  ui,\n};\n\nexport const MobxProvider = (props: { children: ReactNode }): JSX.Element => (\n  <Provider {...rootStore}>{props.children}</Provider>\n);\n\nexport const useStore = () => useContext(MobXProviderContext) as Stores;\n\nexport const observer = _observer;\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core';\nimport { useMemo } from 'react';\nimport List, {\n  useScrollFetch,\n  useMemoryScroll,\n} from '../components/ProductList';\nimport { useStore, observer } from '../store';\n\nexport default observer(function Products(): JSX.Element {\n  const {\n    product: { products: allProducts, toggleWish, wishs },\n    ui: { productPage, productPageUp, productScroll },\n  } = useStore();\n\n  const products = useMemo(() => {\n    return allProducts.slice(0, productPage * 10);\n  }, [allProducts, productPage]);\n\n  useScrollFetch(productPageUp);\n  useMemoryScroll(productScroll);\n\n  return <List products={products} wishs={wishs} toggleWish={toggleWish} />;\n});\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core';\nimport styled from '@emotion/styled';\nimport { useMemo } from 'react';\nimport List, {\n  useScrollFetch,\n  useMemoryScroll,\n} from '../components/ProductList';\nimport { useStore, observer } from '../store';\n\nexport default observer(function Products(): JSX.Element {\n  const {\n    product: { wishProducts, removeWish },\n    ui: { wishProductPage, wishProductPageUp, wishProductScroll },\n  } = useStore();\n\n  const products = useMemo(() => {\n    return wishProducts.slice(0, wishProductPage * 10);\n  }, [wishProductPage, wishProducts]);\n\n  useScrollFetch(wishProductPageUp);\n  useMemoryScroll(wishProductScroll);\n\n  return products.length > 0 ? (\n    <List products={products} removeWish={removeWish} />\n  ) : (\n    <EmptyList>위시 리스트에 담긴 상품이 없습니다</EmptyList>\n  );\n});\n\nconst EmptyList = styled.h2`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n  height: 100%;\n`;\n","export const navigations = [\n  {\n    name: 'products',\n    displayName: '상품 리스트',\n    link: '/products',\n  },\n  {\n    name: 'wishProducts',\n    displayName: '위시 리스트',\n    link: '/wish-products',\n  },\n];\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core';\nimport styled from '@emotion/styled';\nimport { useState, useCallback } from 'react';\nimport { colors } from '../../styles';\nimport { navigations } from './constants';\nimport { useStore } from '../../store';\nimport { PagePaths } from '../../types';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport default function Navigation(): JSX.Element {\n  const location = useLocation();\n  const [selectedTab, setSelectedTab] = useState(location.pathname);\n  const {\n    ui: { setScroll },\n  } = useStore();\n  const handleClickTab = useCallback(\n    (link: string) => {\n      setScroll(\n        location.pathname as PagePaths,\n        document.scrollingElement?.scrollTop ?? 0,\n      );\n      setSelectedTab(link);\n    },\n    [location.pathname, setScroll],\n  );\n\n  return (\n    <Nav>\n      <ol>\n        {navigations.map(({ name, displayName, link }) => (\n          <NavItem\n            key={name}\n            selected={selectedTab === link}\n            onClick={() => handleClickTab(link)}\n          >\n            <Link to={link}>{displayName}</Link>\n          </NavItem>\n        ))}\n      </ol>\n    </Nav>\n  );\n}\n\nconst Nav = styled.nav`\n  ol {\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n\n    li + li {\n      margin-left: 16px;\n    }\n  }\n`;\nconst NavItem = styled.li<{ selected: boolean }>`\n  color: ${(p) => (p.selected ? colors.white : colors.whiteA70)};\n`;\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core';\nimport styled from '@emotion/styled';\nimport { colors } from '../../styles';\nimport { useStore, observer } from '../../store';\nimport { SortOption } from '../../store/product';\n\nexport default observer(function Navigation(): JSX.Element {\n  const {\n    product,\n    ui: { clearScroll },\n  } = useStore();\n  return (\n    <Nav>\n      <ol>\n        <NavItem\n          onClick={() => {\n            clearScroll();\n            product.sortOption = SortOption.PriceDESC;\n          }}\n          selected={product.sortOption === SortOption.PriceDESC}\n        >\n          가격 높은순\n        </NavItem>\n        <NavItem\n          onClick={() => {\n            clearScroll();\n            product.sortOption = SortOption.PriceASC;\n          }}\n          selected={product.sortOption === SortOption.PriceASC}\n        >\n          가격 낮은순\n        </NavItem>\n      </ol>\n    </Nav>\n  );\n});\n\nconst Nav = styled.nav`\n  ol {\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n\n    li + li {\n      margin-left: 16px;\n    }\n  }\n`;\nconst NavItem = styled.li<{ selected: boolean }>`\n  color: ${(p) => (p.selected ? colors.white : colors.whiteA70)};\n  cursor: pointer;\n`;\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core';\nimport styled from '@emotion/styled';\nimport { colors } from '../../styles';\nimport Navigation from './Navigation';\nimport SortOption from './SortOption';\n\nexport default function Header(): JSX.Element {\n  return (\n    <Wrapper>\n      <Navigation />\n      <SortOption />\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 50px;\n  margin: auto;\n  padding: 0 16px;\n  background-color: ${colors.sky};\n  z-index: 100;\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport GlobalStyles from './styles/globalStyles';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Products from './pages/Products';\nimport WishProducts from './pages/WishProducts';\nimport Header from './components/Header';\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <GlobalStyles />\n      <Router>\n        <Header />\n        <Page>\n          <Switch>\n            <Route path=\"/products\">\n              <Products />\n            </Route>\n            <Route path=\"/wish-products\">\n              <WishProducts />\n            </Route>\n            <Route path=\"/\">\n              <Products />\n            </Route>\n          </Switch>\n        </Page>\n      </Router>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n\nconst Page = styled.div`\n  padding: 50px 0 0 0;\n  height: 100%;\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { MobxProvider } from './store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <MobxProvider>\n      <App />\n    </MobxProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}